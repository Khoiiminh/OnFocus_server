
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.11.0
 * Query Engine version: 9c30299f5a0ea26a96790e13f796dc6094db3173
 */
Prisma.prismaVersion = {
  client: "6.11.0",
  engine: "9c30299f5a0ea26a96790e13f796dc6094db3173"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.ExternalAccountScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  source_id: 'source_id',
  external_user_id: 'external_user_id',
  access_token: 'access_token',
  refresh_token: 'refresh_token',
  expires_at: 'expires_at',
  connected_at: 'connected_at'
};

exports.Prisma.AttachmentsScalarFieldEnum = {
  id: 'id',
  message_id: 'message_id',
  file_name: 'file_name',
  file_url: 'file_url',
  file_type: 'file_type',
  created_at: 'created_at'
};

exports.Prisma.Message_versionsScalarFieldEnum = {
  id: 'id',
  message_id: 'message_id',
  version: 'version',
  content: 'content',
  update_at: 'update_at'
};

exports.Prisma.MessagesScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  source_id: 'source_id',
  external_account_id: 'external_account_id',
  external_message_id: 'external_message_id',
  original_content: 'original_content',
  received_at: 'received_at',
  is_read: 'is_read',
  priority_level: 'priority_level',
  created_at: 'created_at'
};

exports.Prisma.SourcesScalarFieldEnum = {
  id: 'id',
  name: 'name',
  type: 'type',
  icon_url: 'icon_url',
  base_url: 'base_url',
  created_at: 'created_at'
};

exports.Prisma.SummariesScalarFieldEnum = {
  id: 'id',
  message_id: 'message_id',
  summary_text: 'summary_text',
  is_edited: 'is_edited',
  model_used: 'model_used',
  temperature: 'temperature',
  is_auto_generated: 'is_auto_generated',
  generated_at: 'generated_at'
};

exports.Prisma.Summary_cacheScalarFieldEnum = {
  id: 'id',
  message_id: 'message_id',
  summary_text: 'summary_text',
  model_used: 'model_used',
  temperature: 'temperature',
  created_at: 'created_at'
};

exports.Prisma.UsersScalarFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  password: 'password',
  is_verified: 'is_verified',
  verification_token: 'verification_token',
  email_verified_at: 'email_verified_at',
  reset_token_expires: 'reset_token_expires',
  is_active: 'is_active',
  created_at: 'created_at',
  update_at: 'update_at'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.ExternalAccountOrderByRelevanceFieldEnum = {
  external_user_id: 'external_user_id',
  access_token: 'access_token',
  refresh_token: 'refresh_token'
};

exports.Prisma.attachmentsOrderByRelevanceFieldEnum = {
  file_name: 'file_name',
  file_url: 'file_url',
  file_type: 'file_type'
};

exports.Prisma.message_versionsOrderByRelevanceFieldEnum = {
  content: 'content'
};

exports.Prisma.messagesOrderByRelevanceFieldEnum = {
  external_message_id: 'external_message_id',
  original_content: 'original_content'
};

exports.Prisma.sourcesOrderByRelevanceFieldEnum = {
  name: 'name',
  type: 'type',
  icon_url: 'icon_url',
  base_url: 'base_url'
};

exports.Prisma.summariesOrderByRelevanceFieldEnum = {
  summary_text: 'summary_text',
  model_used: 'model_used'
};

exports.Prisma.summary_cacheOrderByRelevanceFieldEnum = {
  summary_text: 'summary_text',
  model_used: 'model_used'
};

exports.Prisma.usersOrderByRelevanceFieldEnum = {
  name: 'name',
  email: 'email',
  password: 'password',
  verification_token: 'verification_token'
};
exports.messages_priority_level = exports.$Enums.messages_priority_level = {
  low: 'low',
  medium: 'medium',
  high: 'high'
};

exports.Prisma.ModelName = {
  ExternalAccount: 'ExternalAccount',
  attachments: 'attachments',
  message_versions: 'message_versions',
  messages: 'messages',
  sources: 'sources',
  summaries: 'summaries',
  summary_cache: 'summary_cache',
  users: 'users'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
